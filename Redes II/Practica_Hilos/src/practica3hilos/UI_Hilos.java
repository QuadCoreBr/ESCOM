/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica3hilos;

import java.util.logging.Level;
import java.util.logging.Logger;
import sun.rmi.runtime.Log;

public class UI_Hilos extends javax.swing.JFrame {

    /**
     * Creates new form UI_Hilos
     */
    public UI_Hilos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Hilo_Secuencia1"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Hilo_Secuencia2"));

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 36)); // NOI18N
        jLabel1.setText("Práctica 3: Hilos");

        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel2.setText("-Osorio Rendón Francisco");

        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel3.setText("-Santillán Álvarez Katia");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        label1.setText("Interrupciones a Hilo1");

        label2.setText("Interrupciones a Hilo2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(95, 95, 95)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        log logObject = new log();
        Logger log = logObject.getLog();

        Hilo_Interrupciones hi = new Hilo_Interrupciones(jTextArea1, jTextArea2, jTextArea3, jTextArea4);
                
        hi.start();
        while (hi.isInterrupted()) {
            if (hi.isInterrupted()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.isDaemon()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H2.isDaemon()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H1.isDaemon()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H1.isAlive()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H2.isAlive()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H1.isInterrupted()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H2.isDaemon()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
            log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
            log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        while (hi.isDaemon()) {
            if (hi.H1.isAlive()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H2.isAlive()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H1.isInterrupted()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H2.isDaemon()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
            log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
            log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        while (hi.isAlive()) {
            if (hi.H1.isAlive()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H2.isAlive()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H1.isInterrupted()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (hi.H2.isDaemon()) {
                log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
                log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
                log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            log.info(hi.H1.getId() + ", " + hi.H1.getName() + ", " + hi.H1.getState() + "\n");
            log.info(hi.H2.getId() + ", " + hi.H2.getName() + ", " + hi.H2.getState() + "\n");
            log.info(hi.getId() + ", " + hi.getName() + ", " + hi.getState() + ", " + hi.contador + "\n");
            
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                java.util.logging.Logger.getLogger(UI_Hilos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new UI_Hilos().setVisible(true);

        log logObject = new log();
        Logger log = logObject.getLog();
        Hilo_Secuencia1 h1 = new Hilo_Secuencia1();
        Hilo_Secuencia2 h2 = new Hilo_Secuencia2();
        Hilo_Interrupciones hi = new Hilo_Interrupciones(h1,h2);
        
        hi.start();
        while(hi.isAlive()){
            log.info(hi.H1.getId()+", "+hi.H1.getName()+", "+hi.H1.getState()+", "+hi.H1.estado+", "+"\n");
           // log.info(hi.H2.getId()+", "+hi.H2.getName()+", "+hi.H2.getState()+", "+hi.H2.estado+", "+hi.H2.interrupcion+"\n");
            log.info(hi.H2.getId()+", "+hi.H2.getName()+", "+hi.H2.getState()+", "+hi.H2.estado+ "\n");
            log.info(hi.getId()+", "+hi.getName()+", "+hi.getState()+", "+hi.contador+"\n");
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                java.util.logging.Logger.getLogger(log.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            }
            
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    public javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private java.awt.Label label1;
    private java.awt.Label label2;
    // End of variables declaration//GEN-END:variables
}
